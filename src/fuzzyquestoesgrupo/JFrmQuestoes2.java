package fuzzyquestoesgrupo;

import fuzzySystem.BaseDadosEntrada;
import fuzzySystem.Fuzzyficador;
import fuzzySystem.ListaParesFuzzy;
import fuzzySystem.MaquinaInferencia;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import questoes.Alternativa;
import questoes.Questao;

/**
 *
 * @author Gustavo B. Paulus, Iulisloi Zacarias, Rafael A. Vitalli
 */
public class JFrmQuestoes2 extends javax.swing.JFrame {

    private ArrayList<questoes.Questao> questoes;
    private int questaoAtual;

    /**
     * Creates new form JFrmQuestoes2
     */
    public JFrmQuestoes2() {
        initComponents();
        questoes = new ArrayList<>();
        questaoAtual = 0;
        geraQuestoes();
        mostraQuestao(questaoAtual);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTATxtQuestao = new javax.swing.JTextArea();
        jCbAlt1 = new javax.swing.JComboBox();
        jCbAlt2 = new javax.swing.JComboBox();
        jCbAlt3 = new javax.swing.JComboBox();
        jCbAlt4 = new javax.swing.JComboBox();
        jCbAlt5 = new javax.swing.JComboBox();
        jLbAlt1 = new javax.swing.JLabel();
        jLbAlt2 = new javax.swing.JLabel();
        jLbAlt3 = new javax.swing.JLabel();
        jLbAlt4 = new javax.swing.JLabel();
        jLbAlt5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("Sistema fuzzy para correção de questões!");

        jLabel2.setText("Grupo: Gustavo B. Paulus, Iulisloi Zacarias, Rafael A. Vitalli");

        jLabel3.setText("Professor: Dr. Fábio J. Parreira");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3))
        );

        jPanel2.setBorder(null);

        jScrollPane1.setBorder(null);

        jTATxtQuestao.setEditable(false);
        jTATxtQuestao.setColumns(20);
        jTATxtQuestao.setLineWrap(true);
        jTATxtQuestao.setRows(5);
        jScrollPane1.setViewportView(jTATxtQuestao);

        jCbAlt1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "V", "F" }));

        jCbAlt2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "V", "F" }));

        jCbAlt3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "V", "F" }));

        jCbAlt4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "V", "F" }));

        jCbAlt5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "V", "F" }));

        jLbAlt1.setText("jLabel1");

        jLbAlt2.setText("jLabel2");

        jLbAlt3.setText("jLabel3");

        jLbAlt4.setText("jLabel4");

        jLbAlt5.setText("jLabel5");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCbAlt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLbAlt2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCbAlt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLbAlt3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCbAlt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLbAlt4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jCbAlt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLbAlt1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jCbAlt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLbAlt5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbAlt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLbAlt1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbAlt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLbAlt2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbAlt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLbAlt3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbAlt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLbAlt4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbAlt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLbAlt5))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Avançar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Voltar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(53, 53, 53)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (questaoAtual < questoes.size() - 1) {
            this.responder(questaoAtual);
            questaoAtual++;
            mostraQuestao(questaoAtual);
        } else {
            this.responder(questaoAtual);
            corrigir();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrmQuestoes2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrmQuestoes2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrmQuestoes2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrmQuestoes2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrmQuestoes2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jCbAlt1;
    private javax.swing.JComboBox jCbAlt2;
    private javax.swing.JComboBox jCbAlt3;
    private javax.swing.JComboBox jCbAlt4;
    private javax.swing.JComboBox jCbAlt5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLbAlt1;
    private javax.swing.JLabel jLbAlt2;
    private javax.swing.JLabel jLbAlt3;
    private javax.swing.JLabel jLbAlt4;
    private javax.swing.JLabel jLbAlt5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTATxtQuestao;
    // End of variables declaration//GEN-END:variables

    private void geraQuestoes() {
        Questao q1 = new Questao("Sobre inteligência artificial forte, avalie como Verdadeiro ou Falso:");
        Alternativa a11 = new Alternativa("Inteligência Artificial Forte aborda a criação da forma de inteligência baseada em computador que consiga raciocinar e resolver problemas; ", "V");
        Alternativa a12 = new Alternativa("É um modelo para o aprendizado da máquina, inspirado no livro Origem das Espécies, através da Seleção Natural, escrito pelo naturalista inglês Charles Darwin (1809-1882), criador da teoria evolucionista, segundo a qual somente os mais aptos sobrevivem.", "F");
        Alternativa a13 = new Alternativa("Possui várias denominações, dentre elas redes neurais, modelo conectista, neurocomputação, modelo de processamento paralelo distribuído, sistemas neuromórficos e computadores biológicos.", "F");
        Alternativa a14 = new Alternativa("Também denominada de Conjuntos Difusos ou Lógica Nebulosa. Foi estruturada por Lofti Zadeh da University of Califórnia,  no ano de 1965. É uma metodologia que serve para representar, manipular e modelar informações incertas.", "F");
        Alternativa a15 = new Alternativa("Diz que a atividade mental de um   cérebro humano não passa de uma sequência  complexa  de  operações, assim como um procedimento. Quando   essa   complexidade for  definida, de forma a ser possível reproduzi-la, o  computador   poderá processar de forma idêntica ao cérebro e todas as qualidades mentais.", "V");
        q1.addAlternativa(a11);
        q1.addAlternativa(a12);
        q1.addAlternativa(a13);
        q1.addAlternativa(a14);
        q1.addAlternativa(a15);

        Questao q2 = new Questao("São exemplos de inteligência artificial:");
        Alternativa a21 = new Alternativa("Teste de turing", "V");
        Alternativa a22 = new Alternativa("Editores de texto", "F");
        Alternativa a23 = new Alternativa("Sistemas Comerciais", "F");
        Alternativa a24 = new Alternativa("Ide(s) de desenvolvimento", "F");
        Alternativa a25 = new Alternativa("Softwares Identificadores de imagens", "V");
        q2.addAlternativa(a21);
        q2.addAlternativa(a22);
        q2.addAlternativa(a23);
        q2.addAlternativa(a24);
        q2.addAlternativa(a25);

        Questao q3 = new Questao("Quando surgiram os primeros estudos subre inteligência artificial:");
        Alternativa a31 = new Alternativa("Decada de 40", "V");
        Alternativa a32 = new Alternativa("Decada de 60", "F");
        Alternativa a33 = new Alternativa("Decada de 70", "F");
        Alternativa a34 = new Alternativa("Decada de 90", "F");
        Alternativa a35 = new Alternativa("Durante a segunda guerra mundial", "V");
        q3.addAlternativa(a31);
        q3.addAlternativa(a32);
        q3.addAlternativa(a33);
        q3.addAlternativa(a34);
        q3.addAlternativa(a35);

        Questao q4 = new Questao("Sobre algoritmos Genéticos é possivel afirmar:");
        Alternativa a41 = new Alternativa("Trabalham com uma população e não com um único ponto.", "V");
        Alternativa a42 = new Alternativa("Trabalham com uma codificação do conjunto de parâmetros e não com os próprios parâmetros", "V");
        Alternativa a43 = new Alternativa("Utilizam informações de custo ou recompensa e não derivadas ou outro conhecimento auxiliar.", "V");
        Alternativa a44 = new Alternativa("Utilizam regras de transição probabilísticas e não determinísticas.", "V");
        Alternativa a45 = new Alternativa("Trabalham com um único ponto e não com uma população", "F");
        q4.addAlternativa(a41);
        q4.addAlternativa(a42);
        q4.addAlternativa(a43);
        q4.addAlternativa(a44);
        q4.addAlternativa(a45);

        Questao q5 = new Questao("Assinale como verdadeio a(s) alternativa(s) que é(são) exemplo(s) de rede neural:");
        Alternativa a51 = new Alternativa("Algoritmo perceptron", "V");
        Alternativa a52 = new Alternativa("Teste de turing", "F");
        Alternativa a53 = new Alternativa("HASHMAP", "F");
        Alternativa a54 = new Alternativa("Rede MLP", "V");
        Alternativa a55 = new Alternativa("Backpropagation", "V");
        q5.addAlternativa(a51);
        q5.addAlternativa(a52);
        q5.addAlternativa(a53);
        q5.addAlternativa(a54);
        q5.addAlternativa(a55);
        
        Questao q6 = new Questao("Referente à UML, responda às afirmativas:");
        Alternativa a61 = new Alternativa("Dependência representa um relacionamento semântico entre dois ítens onde um depende do outro.", "V");
        Alternativa a62 = new Alternativa("Associação é um relacionamento estrutural entre objetos.", "F");
        Alternativa a63 = new Alternativa("Generalização é um relacionamento conhecido como herança, onde os itens filhos herdam características dos itens pais.", "V");
        Alternativa a64 = new Alternativa("Composição é um relacionamento em que mesmo não existindo o Objeto-Todo, a existência do Objeto-Parte faz sentido.", "F");
        Alternativa a65 = new Alternativa("Agregação é um relacionamento em que a existência do Objeto-Parte faz sentido, mesmo não existindo o Objeto-Todo.", "V");
        q6.addAlternativa(a61);
        q6.addAlternativa(a62);
        q6.addAlternativa(a63);
        q6.addAlternativa(a64);
        q6.addAlternativa(a65);
        
        Questao q7 = new Questao("Com relação à diagramas de UML, responda:");
        Alternativa a71 = new Alternativa("Os diagramas agrupam um conjunto de itens afins.", "V");
        Alternativa a72 = new Alternativa("São diagramas estruturais o diagrama de classes, o diagrama de objetos e o diagrama de sequência.", "F");
        Alternativa a73 = new Alternativa("São diagramas comportamentais o diagrama de casos de uso, o diagrama de estados e o diagrama de atividades.", "V");
        Alternativa a74 = new Alternativa("São diagramas arquiteturais o diagrama de implantação e o diagrama de componentes.", "V");
        Alternativa a75 = new Alternativa("O diagrama de classes, o diagrama de objetos e o diagrama de estados fazem parte do mesmo grupo.", "F");
        q7.addAlternativa(a71);
        q7.addAlternativa(a72);
        q7.addAlternativa(a73);
        q7.addAlternativa(a74);
        q7.addAlternativa(a75);
        
        Questao q8 = new Questao("Com relação a abstração em Orientação a Objetos:");
        Alternativa a81 = new Alternativa("É uma técnica para controlar a complexidade pela ênfase em características essenciais e pela supressão de detalhes.", "V");
        Alternativa a82 = new Alternativa("Para construção de modelos é importante desconsiderar alguns aspectos do mundo real, visando controlar a complexidade.", "V");
        Alternativa a83 = new Alternativa("Com a abstração vamos modelar somente o que é relevante para o contexto do sistema.", "V");
        Alternativa a84 = new Alternativa("Por exemplo, como os detalhes ficam internos e escondidos no objeto Pessoa podemos entender que este objeto pode possuir qualquer característica de uma Pessoa do mundo real.", "V");
        Alternativa a85 = new Alternativa("No projeto de uma Classe não existe a necessidade do uso da técnica de abstração. Assim, devemos projetá-la com os seus atributos, métodos e interface.", "F");
        q8.addAlternativa(a81);
        q8.addAlternativa(a82);
        q8.addAlternativa(a83);
        q8.addAlternativa(a84);
        q8.addAlternativa(a85);
        
        Questao q9 = new Questao("Sobre Orientação a Objetos, responda:");
        Alternativa a91 = new Alternativa("Os conceitos de generalização e especialização da orientação a objetos estão diretamente associados ao conceito de herança.", "V");
        Alternativa a92 = new Alternativa("Polimorfismo é o princípio pelo qual duas ou mais classes derivadas de uma mesma superclasse podem invocar métodos que têm a mesma assinatura e mesmo comportamento.", "F");
        Alternativa a93 = new Alternativa("Um objeto pode existir mesmo que não exista nenhum evento a ele associado.", "V");
        Alternativa a94 = new Alternativa("Um construtor visa inicializar os atributos e pode ser executado automaticamente sempre que um novo objeto é criado.", "V");
        Alternativa a95 = new Alternativa("Uma classe define o comportamento dos objetos através de seus métodos, e quais estados ele é capaz de manter através de seus atributos.", "V");
        q9.addAlternativa(a91);
        q9.addAlternativa(a92);
        q9.addAlternativa(a93);
        q9.addAlternativa(a94);
        q9.addAlternativa(a95);
        
        Questao q10 = new Questao("Marque V ou F nas afirmativas abaixo:");
        Alternativa a101 = new Alternativa("Em um programa orientado a objetos, as instâncias de uma classe armazenam os mesmos tipos de informações e apresentam o mesmo comportamento.", "V");
        Alternativa a102 = new Alternativa("Em uma aplicação orientada a objetos, podem existir múltiplas instâncias de uma mesma classe.", "V");
        Alternativa a103 = new Alternativa("Em um programa orientado a objetos, as instâncias definem os serviços que podem ser solicitados aos métodos.", "F");
        Alternativa a104 = new Alternativa("Em um programa orientado a objetos, o método construtor não pode ser executado quando a classe à qual pertence é executada.", "F");
        Alternativa a105 = new Alternativa("No contexto da Orientação a Objetos, o conjunto de objetos que têm a mesma estrutura e o mesmo comportamento é denominado classe.", "V");
        q10.addAlternativa(a101);
        q10.addAlternativa(a102);
        q10.addAlternativa(a103);
        q10.addAlternativa(a104);
        q10.addAlternativa(a105);

        questoes.add(q1);
        questoes.add(q2);
        questoes.add(q3);
        questoes.add(q4);
        questoes.add(q5);
        questoes.add(q6);
        questoes.add(q7);
        questoes.add(q8);
        questoes.add(q9);
        questoes.add(q10);
    }

    private void mostraQuestao(int i) {
        Questao q = this.questoes.get(i);
        jTATxtQuestao.setText(q.getTexto());
        ArrayList<Alternativa> alt = q.getAlternativas();
        ArrayList<String> txtAlt = new ArrayList<>();
        for (int j = 0; j < alt.size(); j++) {
            txtAlt.add(alt.get(j).getCorreta() + " -> " + alt.get(j).getTexto());
        }
        jLbAlt1.setText(txtAlt.get(0));
        jLbAlt2.setText(txtAlt.get(1));
        jLbAlt3.setText(txtAlt.get(2));
        jLbAlt4.setText(txtAlt.get(3));
        jLbAlt5.setText(txtAlt.get(4));
    }

    private void responder(int i) {
        this.questoes.get(i).getAlternativas().get(0).setResposta(jCbAlt1.getSelectedItem().toString().trim());
        this.questoes.get(i).getAlternativas().get(1).setResposta(jCbAlt2.getSelectedItem().toString().trim());
        this.questoes.get(i).getAlternativas().get(2).setResposta(jCbAlt3.getSelectedItem().toString().trim());
        this.questoes.get(i).getAlternativas().get(3).setResposta(jCbAlt4.getSelectedItem().toString().trim());
        this.questoes.get(i).getAlternativas().get(4).setResposta(jCbAlt5.getSelectedItem().toString().trim());
    }

    private void corrigir() {
        double nota;
        String notaFormatada = new String();
        ArrayList<Integer> valoresQuestoes = new ArrayList<>();
        MaquinaInferencia inferencia = new MaquinaInferencia();
        ListaParesFuzzy listaParesFuzzy;
        for (Questao q : this.questoes) {
            valoresQuestoes.add(q.getAcertos());
        }
        listaParesFuzzy = Fuzzyficador.fuzzyficar(valoresQuestoes);
        nota = inferencia.geraInferencia(listaParesFuzzy);
        notaFormatada = formatador(nota);
        JOptionPane.showMessageDialog(this, "A nota do aluno foi: " + notaFormatada);
    }

    private static String formatador(double valor) {
        DecimalFormat formatador = new DecimalFormat("##,##00.00");
        String s = formatador.format(valor);
        s = s.replace(',', '.');
        return s;
    }
}
